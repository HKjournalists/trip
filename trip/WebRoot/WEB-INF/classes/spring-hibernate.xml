<?xml version="1.0" encoding="UTF-8"?>   
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="   
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd   
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd   
       ">
       
     <!-- 加载资源文件 -->   
    <context:property-placeholder location="classpath*:system_db.properties"/>   
 
    <!-- 数据库映射 -->   
    <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">   
        <property name="driverClassName" value="${connection.driver_class}"/>   
        <property name="url" value="${connection.url}"/>   
        <property name="username" value="${connection.username}"/>   
        <property name="password" value="${connection.password}"/>   
    </bean>   
    
    <!-- 配置数据库直接操作类 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean> 
       
    <!-- hibernate 需要的信息 -->   
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >   
        <property name="dataSource" ref="dataSource"/>   
        <!-- 扫描映射文件，实体类 -->   
        <property name="packagesToScan">   
            <list>   
                <!-- 这里，是否可以匹配所有com开头，domain 结尾 下所有的实体！？ -->   
                <value>com.otrip.domain.*</value>   
            </list>   
        </property>   
        <property name="hibernateProperties">   
            <props>   
            	<!-- <prop key="hibernate.dialect">${hibernate.dialect}</prop> -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>   
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>   
                <prop key="hibernate.format_sql">true</prop>   
                   
                
                <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>   
                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>   
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>   
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>   
                <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>   
                   
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>   
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>   
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>   
                  
                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>   
                
            </props>   
        </property>   
    </bean>   
       
       
       
     <!-- hibernateTemplate -->  
     
       
    <aop:aspectj-autoproxy expose-proxy="true"/>   
    <!-- 事务管理器，这里可以设置多个 -->   
    <tx:annotation-driven transaction-manager="transactionManager"/>   
  
    <!-- 给事务注入sessionFactory属性 -->   
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">   
        <property name="sessionFactory" ref="sessionFactory" />   
    </bean>   
    
    <!-- 配置自动建表JPA -->
    <tx:annotation-driven transaction-manager="transactionManagerJpa"/>  
    
    <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
	</bean>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaAdapter" />
		<property name="packagesToScan" value="com.otrip.domain.*" />
		<property name="jpaPropertyMap">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 开启L2 cache -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
			</props>
        </property>
    
    </bean>
    <!--  
    <bean id="transactionManagerJpa" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
      --> 
    <!-- 事务属性配置 -->   
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">   
        <tx:attributes> 
         
        
            <!-- 方法对应的传播属性 -->   
             
            <tx:method name="save*" propagation="REQUIRED"  />   
            <tx:method name="add*" propagation="REQUIRED" />   
            <tx:method name="create*" propagation="REQUIRED" />   
            <tx:method name="insert*" propagation="REQUIRED" />   
            <tx:method name="update*" propagation="REQUIRED" />   
            <tx:method name="merge*" propagation="REQUIRED" />   
            <tx:method name="del*" propagation="REQUIRED" />   
            <tx:method name="remove*" propagation="REQUIRED" />   
            <tx:method name="put*" propagation="REQUIRED" />   
            <tx:method name="use*" propagation="REQUIRED"/>  
            
            <!--  这里用了开涛 老师的 -->   
            
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />   
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />   
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />   
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />   
            <tx:method name="*" read-only="true" />   
        </tx:attributes>   
    </tx:advice>  
   
    <!-- 事务控制位置，一般在业务层service -->
      
     <aop:config>   
        <aop:pointcut id="txPointcut" expression="execution(* com.otrip.service..*.*(..))" />   
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
        
    </aop:config>   
    
    
    <aop:config>
    	<aop:pointcut expression="execution(* com.otrip.dao..*.*(..))" id="doPointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="doPointcut"/> 
    </aop:config>
    
</beans>